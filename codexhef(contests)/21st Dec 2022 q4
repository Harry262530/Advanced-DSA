You are given two binary strings AA and BB, each of length NN. You can perform the following operation on string AA any number of times:

Select a prime number XX.
Choose any substring of string AA having length XX and reverse the substring.
Determine whether you can make the string AA equal to BB using any (possibly zero) number of operations.

A substring is obtained by deleting some (possibly zero) elements from the beginning and some (possibly zero) elements from the end of the string.

Input

4
2
00
00
4
1001
0111
5
11000
10010
5
11000
11010

Output
#include <iostream>
using namespace std;

int main() {
	int t;
	cin>>t;
	while (t--){
	    int n;
	    cin>>n;
	    string s1;
	    cin>>s1;
	    string s2;
	    cin>>s2;
	    int count1=0;
	    int count2=0;
	    for (int i=0;i<n;i++){
	        if (s1[i]=='1'){
	            count1++;
	        }
	        
	    }
	    for (int i=0;i<n;i++){
	        if (s2[i]=='1'){
	            count2++;
	        }
	    }
	    if (count1==count2){
	        cout<<"YES"<<endl;
	    }
	    else{
	        cout<<"NO"<<endl;
	    }
	    
	}
	return 0;
}
