Given an array a of integers of length n, find the nearest smaller number for every element such that the smaller element is on left side.If no small element present 
on the left print -1.

Input: n = 6
a = {1, 5, 0, 3, 4, 5}
Output: -1 1 -1 0 3 4
Explaination: Upto 3 it is easy to see 
the smaller numbers. But for 4 the smaller 
numbers are 1, 0 and 3. But among them 3 
is closest. Similary for 5 it is 4.

//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    vector<int> leftSmaller(int n, int a[]){
        vector<int> ans;
        stack<int> s;
        for (int i=0;i<n;i++){
            if (s.size()==0){
                ans.push_back(-1);
            }
            else if (s.size()>0 && s.top()<a[i]){
                ans.push_back(s.top());
            }
            else if (s.size()>0 && s.top()>=a[i]){
                while (s.size()>0 && s.top()>=a[i]  ){
                    s.pop();
                }
                if (s.size()==0){
                    ans.push_back(-1);
                }
                else{
                    ans.push_back(s.top());
                }
            }
            s.push(a[i]);
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int a[n];
        for(int i = 0;i < n;i++)
            cin>>a[i];
        
        Solution ob;
        vector<int> ans = ob.leftSmaller(n, a);
        for(int i = 0;i < n;i++)
            cout<<ans[i]<<" ";
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends
