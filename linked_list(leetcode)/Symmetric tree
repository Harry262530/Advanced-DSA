Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

Input: root = [1,2,2,3,4,4,3]
Output: true

                       Khud se likha
                       
                       
class Solution {
public:
    bool is(TreeNode *left,TreeNode *right){
        if (left==NULL && right==NULL){
            return true;
        }
        if (left==NULL || right==NULL){
            return false;
        }
        if (left->val!=right->val){
            return false;
        }
        else{
            return is(left->left,right->right) && is(left->right,right->left);
        }
    }
    bool isSymmetric(TreeNode* root) {
        if (root->right==NULL && root->left==NULL){
            return true;
        }
        if (root->right==NULL || root->left==NULL){
            return false;
        }
        else{
            return is(root->left,root->right);
        }
    }
};
