Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        if (!root){
            return ans;
        }
        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()){
            int size=q.size();
            for (int i=0;i<size;i++){
                TreeNode *temp=q.front();
                q.pop();
                if (i==size-1){
                    ans.push_back(temp->val);
                }
                if (temp->left){
                    q.push(temp->left);
                }
                if (temp->right){
                    q.push(temp->right);
                }
            }
        }
        return ans;
    }
};
