Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

we have to check individually for one child or no child node with maximum of both heights because if we take minimum there NULL we be returned as output

/**************code*******************\

class Solution {
public:
    int minDepth(TreeNode* root) {
        if (!root){
            return 0;
        }
        //for case if leaf node or any single child node if found
        if (root->left==NULL || root->right==NULL){
            return 1+max(minDepth(root->left),minDepth(root->right));
        }
        return min(minDepth(root->left),minDepth(root->right))+1;
    }
};
