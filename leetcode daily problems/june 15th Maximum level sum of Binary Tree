Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.

Return the smallest level x such that the sum of all the values of nodes at level x is maximal.

 

Example 1:


Input: root = [1,7,0,7,-8,null,null]
Output: 2
Explanation: 
Level 1 sum = 1.
Level 2 sum = 7 + 0 = 7.
Level 3 sum = 7 + -8 = -1.
So we return the level with the maximum sum which is level 2.
Example 2:

Input: root = [989,null,10250,98693,-89388,null,null,null,-32127]
Output: 2


class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        int value=INT_MIN;
        int level=0;
        int ans=0;
        while (!q.empty()){
            int size=q.size();
            level++;
            int cand=0;
            for (int i=0;i<size;i++){
                auto temp=q.front();
                q.pop();
                cand+=temp->val;
                if (temp->left){
                    q.push(temp->left);
                }
                if (temp->right){
                    q.push(temp->right);
                }
            }
            if (value<cand){
                value=cand;
                ans=level;
            }
        }
        return ans;
    }
};
