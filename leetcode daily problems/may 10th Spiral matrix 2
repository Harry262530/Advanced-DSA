Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]

class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> ans(n,vector<int>(n));
        int left=0,right=n-1,top=0,bottom=n-1;
        int direction =1;
        int count=1;
        while (left<=right && top<=bottom){
            if (direction==1){
                for (int i=left;i<=right;i++){
                    ans[top][i]=count;
                    count++;
                }
                top++;
                direction=2;
            }
            else if (direction==2){
                for (int i=top;i<=bottom;i++){
                    ans[i][right]=count;
                    count++;
                }
                right--;
                direction=3;
            }
            else if (direction==3){
                for (int i=right;i>=left;i--){
                    ans[bottom][i]=count;
                    count++;
                }
                bottom--;
                direction=4;
            }
            else if (direction==4){
                for (int i=bottom;i>=top;i--){
                    ans[i][left]=count;
                    count++;
                }
                left++;
                direction=1;
            }
        }
        return ans;
    }
};
