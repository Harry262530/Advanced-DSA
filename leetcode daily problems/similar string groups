Two strings X and Y are similar if we can swap two letters (in different positions) of X, so that it equals Y. Also two strings X and Y are similar if they are equal.

For example, "tars" and "rats" are similar (swapping at positions 0 and 2), and "rats" and "arts" are similar, but "star" is not similar to "tars", "rats", or "arts".

Together, these form two connected groups by similarity: {"tars", "rats", "arts"} and {"star"}.  Notice that "tars" and "arts" are in the same group even though they are not similar.  Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.

We are given a list strs of strings where every string in strs is an anagram of every other string in strs. How many groups are there?

 

Example 1:

Input: strs = ["tars","rats","arts","star"]
Output: 2
Example 2:

Input: strs = ["omv","ovm"]
Output: 1
 

Constraints:

1 <= strs.length <= 300
1 <= strs[i].length <= 300
strs[i] consists of lowercase letters only.
All words in strs have the same length and are anagrams of each other.



class Solution {
public:
    int arr[301];
    int find(int i){
        if (arr[i]<0){
            return i;
        }
        return arr[i]=find(arr[i]);
    }
    void Union(int i,int j){
        int p=find(i);
        int q=find(j);
        if (p==q){
            return ;
        }
        arr[q]=p;
    }
    bool issimilar(string &a,string &b){
        int n=a.size();
        if (a==b){
            return true;
        }
        int count=0;
        for (int i=0;i<n;i++){
            if (a[i]!=b[i]){
                count++;
            }
        }
        if (count==2){
            return true;
        }
        return false;
    }
    int numSimilarGroups(vector<string>& strs) {
        int n=strs.size();
        for (int i=0;i<n;i++){
            arr[i]=-1;
        }
        for (int i=0;i<n;i++){
            for (int j=0;j<n;j++){
                if (issimilar(strs[i],strs[j])){
                    Union(i,j);
                }
            }
        }
        int ans=0;
        for (int i=0;i<n;i++){
            if (arr[i]<0){
                ans++;
            }
        }
        return ans;
    }
};
