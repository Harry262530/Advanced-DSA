Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.

Input: points = [[1,1],[2,2],[3,3]]
Output: 3

Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]
Output: 4


class Solution {
public:
    int maxPoints(vector<vector<int>>& points) {
        int n=points.size();
        int ans=1;
        for (int i=0;i<n;i++){
            unordered_map<double,int> map;
            for (int j=i+1;j<n;j++){
                double x=double(points[j][1]-points[i][1])/double(points[j][0]-points[i][0]);
                if (points[i][0]-points[j][0]==0){
                    map[abs(x)]++;
                }
                else{
                    map[x]++;
                }
            }
            int temp=0;
            for (auto x:map){
                temp=max(temp,x.second+1);
            }
            ans=max(ans,temp);
        }
        return ans;
    }
};
