Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []



class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if (!root){
            return ans;
        }
        bool flag=true;
        queue<TreeNode *> q;
        q.push(root);
        while (!q.empty()){
            int size=q.size();
            vector<int> v(size);
            for (int i=0;i<size;i++){
                auto temp=q.front();
                q.pop();
                int index;
                if (flag){
                    index=i;
                }
                else{
                    index=size-i-1;
                }
                v[index]=temp->val;
                if (temp->left){
                    q.push(temp->left);
                }
                if (temp->right){
                    q.push(temp->right);
                }
            }
            flag=!flag;
            ans.push_back(v);
            
        }
        return ans;
    }
};
