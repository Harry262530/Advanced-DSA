You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []

class Solution {
public:

    ListNode *merge2(ListNode *head1,ListNode *head2){
        if (head1==NULL){
            return head2;
        }
        if (head2==NULL){
            return head1;
        }
        ListNode *head=NULL;
        if (head1->val<=head2->val){
            head=head1;
            head->next=merge2(head1->next,head2);
        }
        else{
            head=head2;
            head->next=merge2(head1,head2->next);
        }
        return head;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.size()==0){
            return NULL;
        }
        ListNode *mainhead=lists[0];
        for (int i=1;i<lists.size();i++){
            mainhead=merge2(mainhead,lists[i]);
        }
        return mainhead;
    }
};
