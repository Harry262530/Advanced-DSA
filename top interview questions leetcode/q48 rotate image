You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.


Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        for (int i=0;i<rows;i++){
            for (int j=i+1;j<cols;j++){
                swap(matrix[i][j],matrix[j][i]);
            }
        }
        for (int i=0;i<rows;i++){
            for (int j=0;j<cols/2;j++){
                swap(matrix[i][j],matrix[i][cols-j-1]);
            }
        }
    }
};
