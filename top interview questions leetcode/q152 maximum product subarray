Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

Example 1;
Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if (nums.size()==1 && nums[0]<0){
            return nums[0];
        }
        int maxproduct=1;
        int minproduct=1;
        int ans=0;
        for (auto x:nums){
            if (x<0){
                swap(maxproduct,minproduct);
            }
            maxproduct=max(maxproduct*x,x);
            minproduct=min(minproduct*x,x);
            ans=max(ans,maxproduct);
        }
        return ans;
    }
};
