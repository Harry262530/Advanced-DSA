Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.


Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]ðŸ˜Š

Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


solution with O(n) space
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        vector<pair<int,int>> ans;
        for (int i=0;i<rows;i++){
            for (int j=0;j<cols;j++){
                if (matrix[i][j]==0){
                    ans.push_back(make_pair(i,j));
                }
            }
        }
        for (int i=0;i<ans.size();i++){
            int x=ans[i].first;
            int y=ans[i].second;
            int row=0;
            int col=0;
            while (row<rows){
                matrix[row][y]=0;
                row++;
            }
            while (col<cols){
                matrix[x][col]=0;
                col++;
            }
        }
    }
};


solution with constant space by striver

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        bool flag=true;
        for (int i=0;i<rows;i++){
            if (matrix[i][0]==0){
                flag=false;
            }
            for (int j=1;j<cols;j++){
                if (matrix[i][j]==0){
                    matrix[0][j]=matrix[i][0]=0;
                }
            }
        }
        for (int i=rows-1;i>=0;i--){
            for (int j=cols-1;j>=1;j--){
                if (matrix[i][0]==0 || matrix[0][j]==0){
                    matrix[i][j]=0;
                }
            }
            if (flag!=true){
                matrix[i][0]=0;
            }
        }
    }
};
