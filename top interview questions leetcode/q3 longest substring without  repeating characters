Given a string s, find the length of the longest 
substring
 without repeating characters.
 
 Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char,int> map;
        int i=0;
        int j=0;
        int maxi=INT_MIN;
        if (s.length()==0){
            return 0;
        }
        while (j<s.length()){
            map[s[j]]++;
            if (map.size()==j-i+1){
                maxi=max(maxi,j-i+1);
            }
            else if (map.size()<j-i+1){
                while (map.size()<j-i+1){
                    map[s[i]]--;
                    if (map[s[i]]==0){
                        map.erase(s[i]);
                    }
                    i++;
                }
            }
            j++;
        }
        return maxi;
    }
};
